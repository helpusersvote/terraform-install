apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: ${_name}-master
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      role: master
      app: redis
  serviceName: "redis-master"
  template:
    metadata:
      labels:
        release: "huv"
        role: master
        app: redis
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: "default"
      containers:
      - name: huv-redis
        image: "${image_repo}:${image_tag}"
        imagePullPolicy: "Always"
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DISABLE_COMMANDS
          value: FLUSHDB,FLUSHALL
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - redis-cli
            - ping
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - redis-cli
            - ping
        resources:
          null
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis/data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      storageClassName: "${storage_class}"
      accessModes:
      - ReadWriteOnce
      volumeName: "${disk_label==""? _name : disk_label}"
      resources:
        requests:
          storage: ${disk_size}
