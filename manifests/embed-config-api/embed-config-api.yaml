kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    heritage: huv
    app: embed-config-api
  name: embed-config-api
spec:
  selector:
    matchLabels:
      app: embed-config-api 
  template:
    metadata:
      labels:
        app: embed-config-api
      name: embed-config-api
    spec:
      containers:
        - name: embed-config
          image: usermirror/config-api:19Az7VsZ0jpMhsAqpesLxk0z88f
          env:
            - name: CONFIG_API_STORAGE_BACKEND
              value: postgres
            - name: CONFIG_API_POSTGRES_ADDR
              value: postgres://huv_user:changeme@localhost:5432/postgres?sslmode=disable
          ports:
            - name: embed-config
              containerPort: 8888
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /internal/health
              port: 8888
          readinessProbe:
            httpGet:
              path: /internal/health
              port: 8888
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=$(INSTANCE_CONNECTION_NAME)=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          env:
          - name: INSTANCE_CONNECTION_NAME
            valueFrom:
              secretKeyRef:
                name: sql-access
                key: instance-connection-name
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
          - name: sql-access-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
      - name: sql-access-credentials
        secret:
          secretName: sql-access
